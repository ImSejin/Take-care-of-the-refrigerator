<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.server.dto.User">

    <!-- 특정 글 번호에 글의 내용을 리턴하는 select 생성 -->

    <!-- 로그인. 이메일, 패스워드로 계정 확인   -->
    <select id="login" parameterType="hashMap" resultType="user">
        select * from users where email=#{email} and password = #{password}
    </select>

    <!-- 닉네임 중복 확인   -->
    <select id="selectbynickname" parameterType="string" resultType="int">
        select sum(exists (select user_id from users where nickname = #{nickname})) from users
    </select>

    <!-- 이메일, 닉네임 중복 확인   -->
    <select id="selectbyemailandnickname" parameterType="hashMap" resultType="int">
        select sum(exists (select user_id from users where email = #{email} or nickname = #{nickname})) from users
    </select>
    
    <!-- 마이페이지: 닉네임, 자기소개, 나의냉장고, 팔로잉 수, 팔로우 수 조회 -->
    <select id="selectbyuserprofilebyuserid" parameterType="int" resultMap="userprofile">
    	select nickname,
               introduce,
               box,
               count(case when followee=#{userId} then #{userId} end) as following_count,
	           count(case when follower=#{userId} then #{userId} end) as follower_count
        from users, follow
        where users.user_id = #{userId}
    </select>

    <select id="selectbyid" parameterType="int" resultType="user">
		select * from users where user_id=#{userId}
	</select>

    <select id="selectbyemail" parameterType="string" resultType="user">
		select * from users where email=#{email}
	</select>

    <select id="search" parameterType="hashMap" resultType="user">
        select * from users
        <if test='by=="uid"'>
            where uid LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test='by=="email"'>
            where email LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </select>

    <select id="selectAll" resultType="user">
        select * from users
    </select>

    <update id="update" parameterType="user">
		update users
        <set>
            <if test="nickname!=null">
                nickname = #{nickname},
            </if>
            <if test="password!=null">
                password = #{password},
            </if>
            <if test="introduce!=null">
                introduce = #{introduce},
            </if>
            <if test="box!=null">
                box = #{box}
            </if>
        </set>
        where email = #{email}
	</update>

    <delete id="delete" parameterType="string">
		delete from users where
		email=#{email}
	</delete>

    <insert id="insert" parameterType="user">
		insert into users (email,password,nickname)
		values(#{email}, #{password}, #{nickname})
	</insert>

    <insert id="insertFollow" parameterType="followdto">
        INSERT INTO follow (follower, followee) VALUES (#{follower, jdbcType=INTEGER}, #{followee, jdbcType=INTEGER})
    </insert>
	
	<resultMap type="com.web.server.dto.UserProfileDto" id="userprofile">
		<id column="nickname" property="nickname"/>
		<result column="introduce" property="introduce"/>
		<result column="box" property="box"/>
	</resultMap>
</mapper>